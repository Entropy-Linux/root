#!/bin/bash

# Initialize variables with default values
quantity=1
delay=0.1
command=""

# Function to display usage information
usage() {
  echo ""
  figlet xloop
  echo ""
  echo "Usage: xloop [OPTIONS] -c <command>"
  echo ""
  echo "OPTIONS:"
  echo "  -q <quantity>   Number of times to run the command (default: 1)"
  echo "  -d <delay>      Delay in seconds between each command execution (default: 1)"
  echo "  -c <command>    Command to run in the loop"
  echo "  --help           Display this help and exit"
  echo ""
  echo "EXAMPLES:"
  echo "  xloop -q 5 -d 0.2 -c 'echo bruh'"
  echo "# Execute 'echo bruh' 5 times with a 0.2s delay"
  echo "  xloop -c 'date'"
  echo "# Execute 'date' command once (default settings)"
  echo ""
  echo "By: Szmelc.INC / sx66"
  echo "GitHub: https://github.com/orgs/GNU-Szmelc/xloop"
}

# Parse command-line options
while getopts "q:d:c:-:" opt; do
  case "$opt" in
    q) quantity="$OPTARG";;
    d) delay="$OPTARG";;
    c) command="$OPTARG";;
    -) # Long options
       case "${OPTARG}" in
         help)
           usage
           exit 0
           ;;
         *)
           echo "Invalid option: --$OPTARG" >&2
           usage
           exit 1
           ;;
       esac
       ;;
    \?) echo "Usage: xloop -c <command>"; exit 1;;
  esac
done

# Validate the quantity and delay values
if [[ ! $quantity =~ ^[0-9]+$ ]] || [[ ! $delay =~ ^[0-9]*(\.[0-9]+)?$ ]]; then
  echo "Error: Quantity and delay must be valid numbers."
  exit 1
fi

# Execute the command in a loop
for ((i=1; i<=quantity; i++)); do
  eval "$command"
  sleep "$delay"
done
